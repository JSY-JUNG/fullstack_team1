<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitc.fullstack503.team1.mapper.kms.MyPageMapper">

    <select id="selectMyProfile" parameterType="String" resultType="bitc.fullstack503.team1.dto.mysql.MyUserDTO">
        SELECT user_id, user_name, user_email, user_phone, grade
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="selectMySpot" parameterType="String" resultType="bitc.fullstack503.team1.dto.mysql.MySpotDTO">
        SELECT
        a.UC_SEQ, a.MAIN_TITLE, a.MAIN_IMG_THUMB, a.ITEMCNTNTS
        FROM
        spot a
        LEFT JOIN
        bookmark b
        ON
        a.UC_SEQ = b.spot_ucseq
        where
        b.user_id = #{userId}
        AND deleted_yn = 'N'
        ORDER BY
        create_date ASC
    </select>

    <select id="selectMyPlace" parameterType="String" resultType="bitc.fullstack503.team1.dto.mysql.MyPlaceDTO">
        SELECT
        a.UC_SEQ, a.MAIN_TITLE, a.MAIN_IMG_THUMB, a.ITEMCNTNTS
        FROM
        place a
        LEFT JOIN
        bookmark b
        ON
        a.UC_SEQ = b.place_ucseq
        where
        b.user_id = #{userId}
        AND deleted_yn = 'N'
        ORDER BY
        create_date ASC
    </select>

    <!--  관리자가 모든 유저가 작성한 리뷰 목록 가져오기  -->
    <select id="selectReviewByManager" resultType="bitc.fullstack503.team1.dto.mysql.MyReviewBoardDTO">
        SELECT
        a.review_idx, a.user_id, a.UC_SEQ, a.UC_SEQ2, a.contents, a.scope, update_date,
        DATE_FORMAT(a.create_date, '%Y-%m-%d') as create_date, substring(b.image_url,24,100) as image_url
        FROM
        review_board a
        LEFT JOIN
        review_image b
        ON
        a.review_idx = b.review_idx
        where
        deleted_yn = 'N'
        ORDER BY
        create_date ASC;
    </select>

    <!--  로그인 한 유저가 작성한 리뷰 목록 가져오기  -->
    <select id="selectReviewByUserName" parameterType="String" resultType="bitc.fullstack503.team1.dto.mysql.MyReviewBoardDTO">
        SELECT
        a.review_idx, a.user_id, a.UC_SEQ, a.UC_SEQ2, a.contents, a.scope,
        DATE_FORMAT(a.create_date, '%Y-%m-%d') as create_date, substring(b.image_url,24,100) as image_url
        FROM
        review_board a
        LEFT JOIN
        review_image b
        ON
        a.review_idx = b.review_idx
        where
        a.user_id = #{userId}
        AND deleted_yn = 'N'
        ORDER BY
        create_date ASC
    </select>

<!--  로그인 한 유저가 작성한 리뷰 세부페이지  -->
    <select id="selectReviewDetail" parameterType="map" resultType="bitc.fullstack503.team1.dto.mysql.MyReviewBoardDTO">
        SELECT
        a.review_idx, a.user_id, a.UC_SEQ, a.UC_SEQ2, a.contents, a.scope,
        DATE_FORMAT(a.create_date, '%Y-%m-%d') as create_date, substring(b.image_url,24,100) as image_url
        FROM
        review_board a
        LEFT JOIN
        review_image b
        ON
        a.review_idx = b.review_idx
        where
        a.user_id = #{userId}
        AND a.review_idx = #{reviewIdx}
        AND deleted_yn = 'N'
        ORDER BY
        create_date ASC
    </select>

<!--    리뷰 업데이트 -->
    <update id="updateReview" parameterType="bitc.fullstack503.team1.dto.mysql.MyReviewBoardDTO">
        UPDATE review_board
        SET contents = #{contents}, update_date = now()
        WHERE review_idx = #{reviewIdx}
    </update>

<!--    리뷰 삭제 -->
    <update id="deleteReview" parameterType="int">
        UPDATE review_board
        SET deleted_yn = 'Y'
        WHERE review_idx = #{reviewIdx}
    </update>
</mapper>